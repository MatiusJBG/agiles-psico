@using Microsoft.AspNetCore.Components.Authorization
@using Cliente.Auth
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<AuthorizeView>
    <Authorized>
        <div class="top-navbar">
            <div class="navbar-container">
                <a href="/" class="brand-link">
                    <i class="fas fa-hotel"></i>
                    <span>Hotel Reserv</span>
                </a>
                <ul class="nav-links">
                    <li>
                        <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                            <i class="fas fa-home"></i>
                            <span>Inicio</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="/hotels">
                            <i class="fas fa-hotel"></i>
                            <span>Hoteles</span>
                        </NavLink>
                    </li>
                    <li>
                        <NavLink class="nav-link" href="/reservations">
                            <i class="fas fa-calendar-check"></i>
                            <span>Reservaciones</span>
                        </NavLink>
                    </li>
                </ul>
                <a class="nav-link logout-link" href="" @onclick="LogOut">
                    <i class="fas fa-sign-out-alt"></i>
                    <span>Cerrar Sesión</span>
                </a>
            </div>
        </div>
    </Authorized>
</AuthorizeView>

<link href="css/navbar.css" rel="stylesheet" />

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogOut()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState("");
        NavigationManager.NavigateTo("/login");
    }
}
