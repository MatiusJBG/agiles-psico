<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Hotel Reserv</a>
    </div>
</div>

<AuthorizeView>
    <Authorized>
        <div class="nav-scrollable">
            <nav class="nav flex-column">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="hotels">
                        <span class="oi oi-home" aria-hidden="true"></span> Hoteles
                    </NavLink>
                </div>
                <div class="nav-item px-3">
                    <a class="nav-link" href="" @onclick="LogOut">
                        <span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar Sesión
                    </a>
                </div>
            </nav>
        </div>
    </Authorized>
</AuthorizeView>

@using Microsoft.AspNetCore.Components.Authorization
@using Cliente.Auth
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogOut()
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthenticationStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState("");
        NavigationManager.NavigateTo("/login");
    }
}
